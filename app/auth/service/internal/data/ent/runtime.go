// Code generated by ent, DO NOT EDIT.

package ent

import (
	"Janna-IM/app/auth/service/internal/data/ent/schema"
	"Janna-IM/app/auth/service/internal/data/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescPhoneNumber is the schema descriptor for phone_number field.
	userDescPhoneNumber := userFields[3].Descriptor()
	// user.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	user.PhoneNumberValidator = userDescPhoneNumber.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[4].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescEx is the schema descriptor for ex field.
	userDescEx := userFields[5].Descriptor()
	// user.ExValidator is a validator for the "ex" field. It is called by the builders before save.
	user.ExValidator = userDescEx.Validators[0].(func(string) error)
	// userDescCreateIP is the schema descriptor for create_ip field.
	userDescCreateIP := userFields[6].Descriptor()
	// user.CreateIPValidator is a validator for the "create_ip" field. It is called by the builders before save.
	user.CreateIPValidator = userDescCreateIP.Validators[0].(func(string) error)
	// userDescLastLoginIP is the schema descriptor for last_login_ip field.
	userDescLastLoginIP := userFields[7].Descriptor()
	// user.LastLoginIPValidator is a validator for the "last_login_ip" field. It is called by the builders before save.
	user.LastLoginIPValidator = userDescLastLoginIP.Validators[0].(func(string) error)
}
