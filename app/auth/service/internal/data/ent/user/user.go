// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldFaceURL holds the string denoting the face_url field in the database.
	FieldFaceURL = "face_url"
	// FieldPhoneNumber holds the string denoting the phone_number field in the database.
	FieldPhoneNumber = "phone_number"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldEx holds the string denoting the ex field in the database.
	FieldEx = "ex"
	// FieldCreateIP holds the string denoting the create_ip field in the database.
	FieldCreateIP = "create_ip"
	// FieldLastLoginIP holds the string denoting the last_login_ip field in the database.
	FieldLastLoginIP = "last_login_ip"
	// FieldInvitationCode holds the string denoting the invitation_code field in the database.
	FieldInvitationCode = "invitation_code"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldLoginTimes holds the string denoting the login_times field in the database.
	FieldLoginTimes = "login_times"
	// FieldLoginLimit holds the string denoting the login_limit field in the database.
	FieldLoginLimit = "login_limit"
	// FieldAppMangerLevel holds the string denoting the app_manger_level field in the database.
	FieldAppMangerLevel = "app_manger_level"
	// FieldGlobalRecvMsgOpt holds the string denoting the global_recv_msg_opt field in the database.
	FieldGlobalRecvMsgOpt = "global_recv_msg_opt"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldBirth holds the string denoting the birth field in the database.
	FieldBirth = "birth"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldLastLoginTime holds the string denoting the last_login_time field in the database.
	FieldLastLoginTime = "last_login_time"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldName,
	FieldFaceURL,
	FieldPhoneNumber,
	FieldEmail,
	FieldEx,
	FieldCreateIP,
	FieldLastLoginIP,
	FieldInvitationCode,
	FieldGender,
	FieldLoginTimes,
	FieldLoginLimit,
	FieldAppMangerLevel,
	FieldGlobalRecvMsgOpt,
	FieldStatus,
	FieldBirth,
	FieldCreateTime,
	FieldLastLoginTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	PhoneNumberValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// ExValidator is a validator for the "ex" field. It is called by the builders before save.
	ExValidator func(string) error
	// CreateIPValidator is a validator for the "create_ip" field. It is called by the builders before save.
	CreateIPValidator func(string) error
	// LastLoginIPValidator is a validator for the "last_login_ip" field. It is called by the builders before save.
	LastLoginIPValidator func(string) error
)
